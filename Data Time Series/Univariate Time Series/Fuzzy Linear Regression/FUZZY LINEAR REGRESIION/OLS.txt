totalbaris=transpose(sum(transpose(A)))

A(1,:)/B(1,:)

for i=1:n
M(i) = A(i,:)/B(i,:)
end


M1 = A(1,:)/B(1,:)
M2 = A(2,:)/B(2,:)

M=[M1;M2];

inv(transpose(M)*M)*transpose(M)*Y

X=0.9+0.2*Y

%MSE
sumsqr(error)/n

%MAPE
MAPE=sum(abs(100*error./X))/n
%R-Square
SSE=MSE*db
1-(SSE/JKT)

mape_res = zeros(n1);
mse_res = zeros(n1);
for i_train = 1:n
  Inp = inputs_consumption(n);
  Actual_Output = targets_consumption( i_train + 1 );
  Observed_Output = sim( ann, Inp );

  mape_res(i_train) = abs(Observed_Output - Actual_Output)/Actual_Output;
  mse_res(i_train) = Observed_Output - Actual_Output;

end

mape = sum(mape_res)/n1;
mse = sum(power(mse_res,2))/N_TRAIN;
sprintf( 'The MSE on training is %g', mse )
sprintf( 'The MAPE on training is %g', mape )

Z = InputFix./totalbaris

for i=1 :n
Z=C(i,:)/totalbaris(i,:)
end


for i=1 :n
C=C(i,:)/totalbaris(i,:)
end



C1 = C(:,1);
C2 = C(:,2);
C3 = C(:,3);
C4 = C(:,4);
C5 = C(:,5);
C6 = C(:,6);
C7 = C(:,7);

CC1=C1/totalbaris(1,:);

CC2=C2/totalbaris(2,:);

CC3=C3/totalbaris(3,:);

CC4=C4/totalbaris(4,:);

CC5=C5/totalbaris(5,:);

CC6=C6/totalbaris(6,:);

CC7=C7/totalbaris(7,:);

Z=[CC1 CC2 CC3 CC4 CC5 CC6 CC7];


R1 = Z(:,1);
R2 = Z(:,2);
R3 = Z(:,3);
R4 = Z(:,4);
R5 = Z(:,5);
R6 = Z(:,6);
R7 = Z(:,7);

Beta=inv(transpose(Z)*Z)*transpose(Z)*Yt;
model=



ts1=timeseries(Yt,1:94);
ts2=timeseries(fit,1:94);
plot(ts1,'.-b');
hold on
plot(ts2,'s-m','Markersize',6);
xlabel('Time');
ylabel('Observed');
title('Actual vs. Predict');
legend('Actual','Predict');

fit = 72.1*R1 + 88.4*R2 + 5.57*R3 + 75.0*R4 - 8.75*R5 + 9.58*R6 + 3.28* R7;
error=Yt-fit;
%MSE
MSE=sumsqr(error)/n;

%MAPE
MAPE=sum(abs(100*error./Yt))/n;

%R-Square
JKT=sumsqr(Yt)-sum(Yt)/n;
RSquare=1-(sumsqr(error)/JKT);






SSE=sumsqr(error);


model=72.1030*CC1+88.3902*CC2+5.55*CC3+75.04*CC4-8.76*CC5+9.57*CC6+3.27*CC7;
fit = 72.1*R1 + 88.4*R2 + 5.57*R3 + 75.0*R4 - 8.75*R5 + 9.58*R6 + 3.28* R7
fit = 8.3*R1 + 17.3*R2 + 0.64*R3 + 19.34*R4 - 0.14*R5 + 3.19*R6 + 1.2* R7




