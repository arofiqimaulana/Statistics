Warning: Name is nonexistent or not a directory: E:\FUZZY FIS\Direktori 
>> Y=[Yt Yt1 Yt2];
>> Y

Y =

   27.9000   27.7000   28.2000
   25.7000   27.9000   27.7000
   23.1000   25.7000   27.9000
   20.6000   23.1000   25.7000
   21.2000   20.6000   23.1000
   22.4000   21.2000   20.6000
   25.1000   22.4000   21.2000
   25.5000   25.1000   22.4000
   25.6000   25.5000   25.1000
   28.3000   25.6000   25.5000
   29.0000   28.3000   25.6000
   28.1000   29.0000   28.3000
   29.0000   28.1000   29.0000
   26.0000   29.0000   28.1000
   23.6000   26.0000   29.0000
   22.5000   23.6000   26.0000
   21.5000   22.5000   23.6000
   22.0000   21.5000   22.5000
   24.1000   22.0000   21.5000
   26.6000   24.1000   22.0000
   26.5000   26.6000   24.1000
   29.2000   26.5000   26.6000
   30.2000   29.2000   26.5000
   30.1000   30.2000   29.2000
   32.5000   30.1000   30.2000
   26.8000   32.5000   30.1000
   24.5000   26.8000   32.5000
   22.1000   24.5000   26.8000
   21.7000   22.1000   24.5000
   21.4000   21.7000   22.1000
   24.7000   21.4000   21.7000
   26.0000   24.7000   21.4000
   27.0000   26.0000   24.7000
   28.6000   27.0000   26.0000
   28.7000   28.6000   27.0000
   28.0000   28.7000   28.6000
   26.7000   28.0000   28.7000
   25.6000   26.7000   28.0000
   23.6000   25.6000   26.7000
   21.8000   23.6000   25.6000
   20.6000   21.8000   23.6000
   21.6000   20.6000   21.8000
   26.2000   21.6000   20.6000
   25.4000   26.2000   21.6000
   26.5000   25.4000   26.2000
   28.0000   26.5000   25.4000
   30.1000   28.0000   26.5000
   30.5000   30.1000   28.0000
   27.9000   30.5000   30.1000
   26.1000   27.9000   30.5000
   23.9000   26.1000   27.9000
   22.4000   23.9000   26.1000
   21.7000   22.4000   23.9000
   22.6000   21.7000   22.4000
   23.8000   22.6000   21.7000
   26.7000   23.8000   22.6000
   27.4000   26.7000   23.8000
   28.0000   27.4000   26.7000
   29.0000   28.0000   27.4000
   29.6000   29.0000   28.0000
   28.1000   29.6000   29.0000
   26.5000   28.1000   29.6000
   23.6000   26.5000   28.1000
   21.3000   23.6000   26.5000
   21.6000   21.3000   23.6000
   21.9000   21.6000   21.3000
   24.1000   21.9000   21.6000
   26.4000   24.1000   21.9000
   26.5000   26.4000   24.1000
   30.5000   26.5000   26.4000
   29.6000   30.5000   26.5000
   30.0000   29.6000   30.5000
   27.5000   30.0000   29.6000
   26.9000   27.5000   30.0000
   24.5000   26.9000   27.5000
   21.1000   24.5000   26.9000
   22.0000   21.1000   24.5000
   22.8000   22.0000   21.1000
   23.5000   22.8000   22.0000
   25.2000   23.5000   22.8000
   26.7000   25.2000   23.5000
   26.8000   26.7000   25.2000
   29.0000   26.8000   26.7000
   28.2000   29.0000   26.8000
   29.1000   28.2000   29.0000
   26.7000   29.1000   28.2000
   25.4000   26.7000   29.1000
   20.2000   25.4000   26.7000
   20.8000   20.2000   25.4000
   22.3000   20.8000   20.2000
   24.0000   22.3000   20.8000
   26.4000   24.0000   22.3000
   25.9000   26.4000   24.0000
   27.9000   25.9000   26.4000

>> max(Y)

ans =

   32.5000   32.5000   32.5000

>> min(Y)

ans =

   20.2000   20.2000   20.2000

>> std(Y)

ans =

    2.9403    2.9387    2.9509

>> mean(Y)

ans =

   25.5798   25.5777   25.6021

>> std(Y)

ans =

    2.9403    2.9387    2.9509

>> std(Y)/7

ans =

    0.4200    0.4198    0.4216

>> std(Y)/3

ans =

    0.9801    0.9796    0.9836

>> format short;
n=length(Yt); 

Yt11=trimf(Yt1,[14.05 20.2 26.35]);
Yt12=trimf(Yt1,[20.2 26.35 32.5]);
Yt13=trimf(Yt1,[26.35 32.5 38.65]);

msinput1=[Yt11 Yt12 Yt13];
mem1=zeros(n,1); 
ket1=zeros(n,1); 

for i=1:n 
 mem1(i)=max(msinput1(i,:)); 
 if max(msinput1(i,:))==msinput1(i,1);
  ket1(i)=1;
  elseif max(msinput1(i,:))==msinput1(i,2);
   ket1(i)=2;
   else max(msinput1(i,:))==msinput1(i,3);
    ket1(i)=3;
 end
end

angin1=[ket1 mem1];


Yt21=gaussmf(Yt2,[0.9801 20.2]); 
Yt22=gaussmf(Yt2,[0.9801 26.35]);
Yt23=gaussmf(Yt2,[0.9801 32.5]);

msinput2=[Yt21 Yt22 Yt23]; 
mem2=zeros(n,1); 
ket2=zeros(n,1); 

for i=1:n 
 mem2(i)=max(msinput2(i,:)); 
 if max(msinput2(i,:))==msinput2(i,1);
  ket2(i)=1;
  elseif max(msinput2(i,:))==msinput2(i,2);
   ket2(i)=2;
   elseif max(msinput2(i,:))==msinput2(i,3);
    ket2(i)=3;
  end
end

angin2=[ket2 mem2];


Yt01=trapmf(Yt,[14.66 19.59 20.81 25.73]);
Yt02=trapmf(Yt,[20.8 25.7 27 31.9]);
Yt03=trapmf(Yt,[26.97 31.88 33.12 38.03]);


msoutput=[Yt01 Yt02 Yt03 ]; 
memou=zeros(n,1); 
ketou=zeros(n,1); 

for i=1:n 
 memou(i)=max(msoutput(i,:)); 
 if max(msoutput(i,:))==msoutput(i,1);
  ketou(i)=1;
  elseif max(msoutput(i,:))==msoutput(i,2);
   ketou(i)=2;
   elseif max(msoutput(i,:))==msoutput(i,3);
    ketou(i)=3;
 end
end

angou=[ketou memou];

member=[ket1 ket2 ketou]; 


rdeg=zeros(n,1); 
for i=1:n
 rdeg(i)=mem1(i)*mem2(i)*memou(i); 
end

%seleksi rule
memdeg=[member rdeg]; %rule beserta rule degree
rule=member;%inisialisasi rule
%proses seleksi rule, looping membandingkan antar baris
for i=1:(n-1)
 for j=(i+1):n
   if (member(i,1)==member(j,1))&(member(i,2)==member(j,2))&(member(i,3)~=member(j,3)) %kondisi jika input sama output beda
    if (max(rdeg(i),rdeg(j))==rdeg(i)) %membandingkan maksimum rule degree yg tidak maks di nolkan
     rule(j,:)=0;
    elseif (max(rdeg(i),rdeg(j))==rdeg(j))
     rule(i,:)=0;
    end
   elseif (member(i,1)==member(j,1))&(member(i,2)==member(j,2))&(member(i,3)==member(j,3)) %kondisi jika input output sama utk beberapa
    if (max(rdeg(i),rdeg(j))==rdeg(i)) %yang tidak maks di nolkan
     rule(j,:)=0;
    elseif (max(rdeg(i),rdeg(j))==rdeg(j))
     rule(i,:)=0;
      end
     end
   end
  end


%menghitung banyaknya rule yang terbentuk
k=0;
for i=1:n
 if rule(i,:)~=[0 0 0]
  k=k+1;
 end
end

%menampilkan ringkasan rule yang terbentuk
rulejadi=[0 0 0 0];
for i=1:n
 if rule(i,:)~=[0 0 0]
 rulejadi=[rulejadi;rule(i,:) rdeg(i)];
 end
end
rulejadi=rulejadi((2:end),:);
>> rulejadi

rulejadi =

    3.0000    3.0000    2.0000    0.0499
    2.0000    3.0000    2.0000    0.6999
    2.0000    1.0000    2.0000    0.3458
    1.0000    1.0000    2.0000    0.7106
    2.0000    2.0000    2.0000    0.8357
    3.0000    2.0000    3.0000    0.3572
    1.0000    2.0000    1.0000    0.6252

>> fuz=readfis('coba1');
in=[Yt1 Yt2];
out=evalfis(in,fuz);
ts1=timeseries(Yt,1:94);
ts2=timeseries(out,1:94);
plot(ts1,'.-b');
hold on
plot(ts2,'s-m','Markersize',6);
xlabel('Time');
ylabel('Observed');
title('Actual vs. Predict');
legend('Actual','Predict');
Undefined function 'gt' for input arguments of type 'cell'.

Error in mfdrag (line 39)
    if which_mf > size(mf_type, 1)

Error in mfdrag>localButtonMotionFcn (line 229)
    mf_type = deblank(feval(mfilename, 'get_current_mf'));
 
Error while evaluating figure WindowButtonMotionFcn

>> max(Y)

ans =

   32.5000   32.5000   32.5000

>> min(Y)

ans =

   20.2000   20.2000   20.2000

Undefined function 'gt' for input arguments of type 'cell'.

Error in mfdrag (line 39)
    if which_mf > size(mf_type, 1)

Error in mfdrag>localButtonMotionFcn (line 229)
    mf_type = deblank(feval(mfilename, 'get_current_mf'));
 
Error using axes
Error while evaluating figure WindowButtonMotionFcn

Undefined function 'gt' for input arguments of type 'cell'.

Error in mfdrag (line 39)
    if which_mf > size(mf_type, 1)

Error in mfdrag>localButtonMotionFcn (line 229)
    mf_type = deblank(feval(mfilename, 'get_current_mf'));
 
Error while evaluating figure WindowButtonMotionFcn

>> std(Y)

ans =

    2.9403    2.9387    2.9509

>> std(Y)/3

ans =

    0.9801    0.9796    0.9836

>> format short;
n=length(Yt); 

Yt11=trimf(Yt1, [14.05 20.2 26.35]);
Yt12=trimf(Yt1, [20.2 26.35 32.5]);
Yt13=trimf(Yt1, [26.35 32.5 38.65]);

msinput1=[Yt11 Yt12 Yt13];
mem1=zeros(n,1); 
ket1=zeros(n,1); 

for i=1:n 
 mem1(i)=max(msinput1(i,:)); 
 if max(msinput1(i,:))==msinput1(i,1);
  ket1(i)=1;
  elseif max(msinput1(i,:))==msinput1(i,2);
   ket1(i)=2;
   else max(msinput1(i,:))==msinput1(i,3);
    ket1(i)=3;
 end
end

angin1=[ket1 mem1];


Yt21=gaussmf(Yt2, [2.94 20.2]); 
Yt22=gaussmf(Yt2, [2.94 26.35]);
Yt23=gaussmf(Yt2, [2.94 32.5]);

msinput2=[Yt21 Yt22 Yt23]; 
mem2=zeros(n,1); 
ket2=zeros(n,1); 

for i=1:n 
 mem2(i)=max(msinput2(i,:)); 
 if max(msinput2(i,:))==msinput2(i,1);
  ket2(i)=1;
  elseif max(msinput2(i,:))==msinput2(i,2);
   ket2(i)=2;
   elseif max(msinput2(i,:))==msinput2(i,3);
    ket2(i)=3;
  end
end

angin2=[ket2 mem2];


Yt01=trapmf(Yt, [14.66 19.59 20.81 25.73]);
Yt02=trapmf(Yt, [20.81 25.73 26.97 31.88]);
Yt03=trapmf(Yt, [26.97 31.88 33.12 38.03]);


msoutput=[Yt01 Yt02 Yt03 ]; 
memou=zeros(n,1); 
ketou=zeros(n,1); 

for i=1:n 
 memou(i)=max(msoutput(i,:)); 
 if max(msoutput(i,:))==msoutput(i,1);
  ketou(i)=1;
  elseif max(msoutput(i,:))==msoutput(i,2);
   ketou(i)=2;
   elseif max(msoutput(i,:))==msoutput(i,3);
    ketou(i)=3;
 end
end

angou=[ketou memou];

member=[ket1 ket2 ketou]; 


rdeg=zeros(n,1); 
for i=1:n
 rdeg(i)=mem1(i)*mem2(i)*memou(i); 
end

%seleksi rule
memdeg=[member rdeg]; %rule beserta rule degree
rule=member;%inisialisasi rule
%proses seleksi rule, looping membandingkan antar baris
for i=1:(n-1)
 for j=(i+1):n
   if (member(i,1)==member(j,1))&(member(i,2)==member(j,2))&(member(i,3)~=member(j,3)) %kondisi jika input sama output beda
    if (max(rdeg(i),rdeg(j))==rdeg(i)) %membandingkan maksimum rule degree yg tidak maks di nolkan
     rule(j,:)=0;
    elseif (max(rdeg(i),rdeg(j))==rdeg(j))
     rule(i,:)=0;
    end
   elseif (member(i,1)==member(j,1))&(member(i,2)==member(j,2))&(member(i,3)==member(j,3)) %kondisi jika input output sama utk beberapa
    if (max(rdeg(i),rdeg(j))==rdeg(i)) %yang tidak maks di nolkan
     rule(j,:)=0;
    elseif (max(rdeg(i),rdeg(j))==rdeg(j))
     rule(i,:)=0;
      end
     end
   end
  end


%menghitung banyaknya rule yang terbentuk
k=0;
for i=1:n
 if rule(i,:)~=[0 0 0]
  k=k+1;
 end
end

%menampilkan ringkasan rule yang terbentuk
rulejadi=[0 0 0 0];
for i=1:n
 if rule(i,:)~=[0 0 0]
 rulejadi=[rulejadi;rule(i,:) rdeg(i)];
 end
end
rulejadi=rulejadi((2:end),:)

rulejadi =

    3.0000    3.0000    2.0000    0.7166
    2.0000    3.0000    2.0000    0.6951
    1.0000    1.0000    2.0000    0.7652
    2.0000    1.0000    2.0000    0.8126
    3.0000    2.0000    3.0000    0.3745
    2.0000    2.0000    2.0000    0.8736
    1.0000    2.0000    1.0000    0.9491

>> rulejadi

rulejadi =

    3.0000    3.0000    2.0000    0.7166
    2.0000    3.0000    2.0000    0.6951
    1.0000    1.0000    2.0000    0.7652
    2.0000    1.0000    2.0000    0.8126
    3.0000    2.0000    3.0000    0.3745
    2.0000    2.0000    2.0000    0.8736
    1.0000    2.0000    1.0000    0.9491

>> fuz=readfis('coba2');
in=[Yt1 Yt2];
out=evalfis(in,fuz);
ts1=timeseries(Yt,1:94);
ts2=timeseries(out,1:94);
plot(ts1,'.-b');
hold on
plot(ts2,'s-m','Markersize',6);
xlabel('Time');
ylabel('Observed');
title('Actual vs. Predict');
legend('Actual','Predict');
>> fuz=readfis('coba2');
in=[Yt1 Yt2];
out=evalfis(in,fuz);
ts1=timeseries(Yt,1:94);
ts2=timeseries(out,1:94);
plot(ts1,'.-b');
hold on
plot(ts2,'s-m','Markersize',6);
xlabel('Time');
ylabel('Observed');
title('Actual vs. Predict');
legend('Actual','Predict');

>> Yt;
>> for i=1:n
    Total=0+Yt[i];
     Total=0+Yt[i];
               |
Error: Unbalanced or unexpected parenthesis or bracket.
 
>> Total[i]=0+Yt[i];
 Total[i]=0+Yt[i];
      |
Error: Unbalanced or unexpected parenthesis or bracket.
 
>> Total[i]=0+Yt[i];
 Total[i]=0+Yt[i];
      |
Error: Unbalanced or unexpected parenthesis or bracket.
 
>> total=0

total =

     0

>> for i=1:n
    Total=0+Yt[i];
     Total=0+Yt[i];
               |
Error: Unbalanced or unexpected parenthesis or bracket.
 
>> Yt

Yt =

   27.9000
   25.7000
   23.1000
   20.6000
   21.2000
   22.4000
   25.1000
   25.5000
   25.6000
   28.3000
   29.0000
   28.1000
   29.0000
   26.0000
   23.6000
   22.5000
   21.5000
   22.0000
   24.1000
   26.6000
   26.5000
   29.2000
   30.2000
   30.1000
   32.5000
   26.8000
   24.5000
   22.1000
   21.7000
   21.4000
   24.7000
   26.0000
   27.0000
   28.6000
   28.7000
   28.0000
   26.7000
   25.6000
   23.6000
   21.8000
   20.6000
   21.6000
   26.2000
   25.4000
   26.5000
   28.0000
   30.1000
   30.5000
   27.9000
   26.1000
   23.9000
   22.4000
   21.7000
   22.6000
   23.8000
   26.7000
   27.4000
   28.0000
   29.0000
   29.6000
   28.1000
   26.5000
   23.6000
   21.3000
   21.6000
   21.9000
   24.1000
   26.4000
   26.5000
   30.5000
   29.6000
   30.0000
   27.5000
   26.9000
   24.5000
   21.1000
   22.0000
   22.8000
   23.5000
   25.2000
   26.7000
   26.8000
   29.0000
   28.2000
   29.1000
   26.7000
   25.4000
   20.2000
   20.8000
   22.3000
   24.0000
   26.4000
   25.9000
   27.9000

>> n=length(Yt)

n =

    94

>> for i=1:n
total=sum(Yt)
end.
 end.
    |
Error: Unexpected MATLAB operator.
 
>> for i=1:n
total=sum(Yt)
en

end

total =

   2.4045e+03

Undefined function or variable 'en'.
 
>> for i=1:n
total=sum(Yt)
end

total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03


total =

   2.4045e+03

>> Yt;
>> sum(Yt)

ans =

   2.4045e+03

>> Y=
 Y=
   |
Error: Expression or statement is incomplete or incorrect.
 
>> Y

Y =

   27.9000   27.7000   28.2000
   25.7000   27.9000   27.7000
   23.1000   25.7000   27.9000
   20.6000   23.1000   25.7000
   21.2000   20.6000   23.1000
   22.4000   21.2000   20.6000
   25.1000   22.4000   21.2000
   25.5000   25.1000   22.4000
   25.6000   25.5000   25.1000
   28.3000   25.6000   25.5000
   29.0000   28.3000   25.6000
   28.1000   29.0000   28.3000
   29.0000   28.1000   29.0000
   26.0000   29.0000   28.1000
   23.6000   26.0000   29.0000
   22.5000   23.6000   26.0000
   21.5000   22.5000   23.6000
   22.0000   21.5000   22.5000
   24.1000   22.0000   21.5000
   26.6000   24.1000   22.0000
   26.5000   26.6000   24.1000
   29.2000   26.5000   26.6000
   30.2000   29.2000   26.5000
   30.1000   30.2000   29.2000
   32.5000   30.1000   30.2000
   26.8000   32.5000   30.1000
   24.5000   26.8000   32.5000
   22.1000   24.5000   26.8000
   21.7000   22.1000   24.5000
   21.4000   21.7000   22.1000
   24.7000   21.4000   21.7000
   26.0000   24.7000   21.4000
   27.0000   26.0000   24.7000
   28.6000   27.0000   26.0000
   28.7000   28.6000   27.0000
   28.0000   28.7000   28.6000
   26.7000   28.0000   28.7000
   25.6000   26.7000   28.0000
   23.6000   25.6000   26.7000
   21.8000   23.6000   25.6000
   20.6000   21.8000   23.6000
   21.6000   20.6000   21.8000
   26.2000   21.6000   20.6000
   25.4000   26.2000   21.6000
   26.5000   25.4000   26.2000
   28.0000   26.5000   25.4000
   30.1000   28.0000   26.5000
   30.5000   30.1000   28.0000
   27.9000   30.5000   30.1000
   26.1000   27.9000   30.5000
   23.9000   26.1000   27.9000
   22.4000   23.9000   26.1000
   21.7000   22.4000   23.9000
   22.6000   21.7000   22.4000
   23.8000   22.6000   21.7000
   26.7000   23.8000   22.6000
   27.4000   26.7000   23.8000
   28.0000   27.4000   26.7000
   29.0000   28.0000   27.4000
   29.6000   29.0000   28.0000
   28.1000   29.6000   29.0000
   26.5000   28.1000   29.6000
   23.6000   26.5000   28.1000
   21.3000   23.6000   26.5000
   21.6000   21.3000   23.6000
   21.9000   21.6000   21.3000
   24.1000   21.9000   21.6000
   26.4000   24.1000   21.9000
   26.5000   26.4000   24.1000
   30.5000   26.5000   26.4000
   29.6000   30.5000   26.5000
   30.0000   29.6000   30.5000
   27.5000   30.0000   29.6000
   26.9000   27.5000   30.0000
   24.5000   26.9000   27.5000
   21.1000   24.5000   26.9000
   22.0000   21.1000   24.5000
   22.8000   22.0000   21.1000
   23.5000   22.8000   22.0000
   25.2000   23.5000   22.8000
   26.7000   25.2000   23.5000
   26.8000   26.7000   25.2000
   29.0000   26.8000   26.7000
   28.2000   29.0000   26.8000
   29.1000   28.2000   29.0000
   26.7000   29.1000   28.2000
   25.4000   26.7000   29.1000
   20.2000   25.4000   26.7000
   20.8000   20.2000   25.4000
   22.3000   20.8000   20.2000
   24.0000   22.3000   20.8000
   26.4000   24.0000   22.3000
   25.9000   26.4000   24.0000
   27.9000   25.9000   26.4000

>> sum(Y)

ans =

   1.0e+03 *

    2.4045    2.4043    2.4066

>> ty=transpose(Y)

ty =

  Columns 1 through 16

   27.9000   25.7000   23.1000   20.6000   21.2000   22.4000   25.1000   25.5000   25.6000   28.3000   29.0000   28.1000   29.0000   26.0000   23.6000   22.5000
   27.7000   27.9000   25.7000   23.1000   20.6000   21.2000   22.4000   25.1000   25.5000   25.6000   28.3000   29.0000   28.1000   29.0000   26.0000   23.6000
   28.2000   27.7000   27.9000   25.7000   23.1000   20.6000   21.2000   22.4000   25.1000   25.5000   25.6000   28.3000   29.0000   28.1000   29.0000   26.0000

  Columns 17 through 32

   21.5000   22.0000   24.1000   26.6000   26.5000   29.2000   30.2000   30.1000   32.5000   26.8000   24.5000   22.1000   21.7000   21.4000   24.7000   26.0000
   22.5000   21.5000   22.0000   24.1000   26.6000   26.5000   29.2000   30.2000   30.1000   32.5000   26.8000   24.5000   22.1000   21.7000   21.4000   24.7000
   23.6000   22.5000   21.5000   22.0000   24.1000   26.6000   26.5000   29.2000   30.2000   30.1000   32.5000   26.8000   24.5000   22.1000   21.7000   21.4000

  Columns 33 through 48

   27.0000   28.6000   28.7000   28.0000   26.7000   25.6000   23.6000   21.8000   20.6000   21.6000   26.2000   25.4000   26.5000   28.0000   30.1000   30.5000
   26.0000   27.0000   28.6000   28.7000   28.0000   26.7000   25.6000   23.6000   21.8000   20.6000   21.6000   26.2000   25.4000   26.5000   28.0000   30.1000
   24.7000   26.0000   27.0000   28.6000   28.7000   28.0000   26.7000   25.6000   23.6000   21.8000   20.6000   21.6000   26.2000   25.4000   26.5000   28.0000

  Columns 49 through 64

   27.9000   26.1000   23.9000   22.4000   21.7000   22.6000   23.8000   26.7000   27.4000   28.0000   29.0000   29.6000   28.1000   26.5000   23.6000   21.3000
   30.5000   27.9000   26.1000   23.9000   22.4000   21.7000   22.6000   23.8000   26.7000   27.4000   28.0000   29.0000   29.6000   28.1000   26.5000   23.6000
   30.1000   30.5000   27.9000   26.1000   23.9000   22.4000   21.7000   22.6000   23.8000   26.7000   27.4000   28.0000   29.0000   29.6000   28.1000   26.5000

  Columns 65 through 80

   21.6000   21.9000   24.1000   26.4000   26.5000   30.5000   29.6000   30.0000   27.5000   26.9000   24.5000   21.1000   22.0000   22.8000   23.5000   25.2000
   21.3000   21.6000   21.9000   24.1000   26.4000   26.5000   30.5000   29.6000   30.0000   27.5000   26.9000   24.5000   21.1000   22.0000   22.8000   23.5000
   23.6000   21.3000   21.6000   21.9000   24.1000   26.4000   26.5000   30.5000   29.6000   30.0000   27.5000   26.9000   24.5000   21.1000   22.0000   22.8000

  Columns 81 through 94

   26.7000   26.8000   29.0000   28.2000   29.1000   26.7000   25.4000   20.2000   20.8000   22.3000   24.0000   26.4000   25.9000   27.9000
   25.2000   26.7000   26.8000   29.0000   28.2000   29.1000   26.7000   25.4000   20.2000   20.8000   22.3000   24.0000   26.4000   25.9000
   23.5000   25.2000   26.7000   26.8000   29.0000   28.2000   29.1000   26.7000   25.4000   20.2000   20.8000   22.3000   24.0000   26.4000

>> ty=transpose(Y);
>> sum(ty)

ans =

  Columns 1 through 16

   83.8000   81.3000   76.7000   69.4000   64.9000   64.2000   68.7000   73.0000   76.2000   79.4000   82.9000   85.4000   86.1000   83.1000   78.6000   72.1000

  Columns 17 through 32

   67.6000   66.0000   67.6000   72.7000   77.2000   82.3000   85.9000   89.5000   92.8000   89.4000   83.8000   73.4000   68.3000   65.2000   67.8000   72.1000

  Columns 33 through 48

   77.7000   81.6000   84.3000   85.3000   83.4000   80.3000   75.9000   71.0000   66.0000   64.0000   68.4000   73.2000   78.1000   79.9000   84.6000   88.6000

  Columns 49 through 64

   88.5000   84.5000   77.9000   72.4000   68.0000   66.7000   68.1000   73.1000   77.9000   82.1000   84.4000   86.6000   86.7000   84.2000   78.2000   71.4000

  Columns 65 through 80

   66.5000   64.8000   67.6000   72.4000   77.0000   83.4000   86.6000   90.1000   87.1000   84.4000   78.9000   72.5000   67.6000   65.9000   68.3000   71.5000

  Columns 81 through 94

   75.4000   78.7000   82.5000   84.0000   86.3000   84.0000   81.2000   72.3000   66.4000   63.3000   67.1000   72.7000   76.3000   80.2000

>> A=[ 1 2
       3 4]

A =

     1     2
     3     4

>> sum(A)

ans =

     4     6

>> sum(transpose(A))

ans =

     3     7

>> transpose(sum(transpose(A)))

ans =

     3
     7

>> A

A =

     1     2
     3     4

>> B=transpose(sum(transpose(A)));
>> A/B
Error using  / 
Matrix dimensions must agree.
 
>> A divide B
Error: "A" was previously used as a variable, conflicting with its use here as the name of a function or command.
See "How MATLAB Recognizes Command Syntax" in the MATLAB documentation for details.
 
>> A/B[1,]
 A/B[1,]
    |
Error: Unbalanced or unexpected parenthesis or bracket.
 
>> B

B =

     3
     7

>> B[1,1]
 B[1,1]
  |
Error: Unbalanced or unexpected parenthesis or bracket.
 
>> B(1,1)

ans =

     3

>> B[1,]
 B[1,]
  |
Error: Unbalanced or unexpected parenthesis or bracket.
 
>> B(1,)
 B(1,)
     |
Error: Unbalanced or unexpected parenthesis or bracket.
 
>> B(1,:)

ans =

     3

>> A

A =

     1     2
     3     4

>> B

B =

     3
     7

>> A(1,:)

ans =

     1     2

>> B(1,:)

ans =

     3

>> A(1,:)/B(1,:)

ans =

    0.3333    0.6667

>> for i=1:n
end
>> A

A =

     1     2
     3     4

>> B

B =

     3
     7

>> n=2

n =

     2

>> for i=1:n
A(i,:)/B(i,:)
end

ans =

    0.3333    0.6667


ans =

    0.4286    0.5714

>> for i=1:n
M = A(i,:)/B(i,:)
end

M =

    0.3333    0.6667


M =

    0.4286    0.5714

>> M(1,:)

ans =

    0.4286    0.5714

>> M(2,:)
Index exceeds matrix dimensions.
 
>>  for i=1:n
M = A(i,:)/B(i,:)
end

M =

    0.3333    0.6667


M =

    0.4286    0.5714

>> M(1,:)

ans =

    0.4286    0.5714

>> M(0,:)
Subscript indices must either be real positive integers or logicals.
 
>> M(2,:)
Index exceeds matrix dimensions.
 
>> for i=1:n
M[i] = A(i,:)/B(i,:)
end
 M[i] = A(i,:)/B(i,:)
  |
Error: Unbalanced or unexpected parenthesis or bracket.
 
>> A(1,:)/B(1,:)

for i=1:n
M(i) = A(i,:)/B(i,:)
end

ans =

    0.3333    0.6667

In an assignment  A(I) = B, the number of elements in B and I must be the same.
 
>> for i=1:n
M(i) = A(i,:)/B(i,:)
end
In an assignment  A(I) = B, the number of elements in B and I must be the same.
 
>> for i=1:n
M = A(i,:)/B(i,:)
end

M =

    0.3333    0.6667


M =

    0.4286    0.5714

>> M

M =

    0.4286    0.5714

>> M(1,1)

ans =

    0.4286

>> M1 = A(1,:)/B(1,:)

M1 =

    0.3333    0.6667

>> M2 = A(2,:)/B(2,:)

M2 =

    0.4286    0.5714

>> M=[M1 M2];
>> M

M =

    0.3333    0.6667    0.4286    0.5714

>> M=[M1];
>> M=[M1
      M2];
>> M

M =

    0.3333    0.6667
    0.4286    0.5714

>> A./B
Error using  ./ 
Matrix dimensions must agree.
 
>> M=matrix(M1,M2)
Undefined function 'matrix' for input arguments of type 'double'.
 
>> M=[M1 
      M2]

M =

    0.3333    0.6667
    0.4286    0.5714

>> M=[M1;M2];
>> M

M =

    0.3333    0.6667
    0.4286    0.5714

>> M=[M1 M2];
>> M

M =

    0.3333    0.6667    0.4286    0.5714

>> M1=[1 2]

M1 =

     1     2

>> M2=[3 4]

M2 =

     3     4

>> M3=[5 6]

M3 =

     5     6

>> M=[M1;M2;M3]

M =

     1     2
     3     4
     5     6

>> invers(tranpose(M)*M)*transpose(M)
Undefined function 'tranpose' for input arguments of type 'double'.
 
>> invers(transpose(M)*M)*transpose(M)
Undefined function 'invers' for input arguments of type 'double'.
 
>> Y = [1;2;3]

Y =

     1
     2
     3

>> inv(transpose(M)*M)*transpose(M)*Y

ans =

   -0.0000
    0.5000

>> M

M =

     1     2
     3     4
     5     6

>> Y

Y =

     1
     2
     3

>> Y(1,:)

ans =

     1

>> M

M =

     1     2
     3     4
     5     6

>> MM=[0 M]
Error using horzcat
Dimensions of matrices being concatenated are not consistent.
 
>> M1

M1 =

     1     2

>> M2

M2 =

     3     4

>> M2

M2 =

     3     4

>> M0=[0 0]

M0 =

     0     0

>> M=[M1;M2;M3]

M =

     1     2
     3     4
     5     6

>> M=[M0;M1;M2;M3]

M =

     0     0
     1     2
     3     4
     5     6

>> M1

M1 =

     1     2

>> M2

M2 =

     3     4

>> M=zeros(n,1)

M =

     0
     0

>> ]=-
 ]=-
 |
Error: Unbalanced or unexpected parenthesis or bracket.
 
>> M=zeros(3,1)

M =

     0
     0
     0

>> MM=[M1;M2;M3]

MM =

     1     2
     3     4
     5     6

>> MMM=[M0 MM];
Error using horzcat
Dimensions of matrices being concatenated are not consistent.
 
>> MMM=[M0 MM];
Error using horzcat
Dimensions of matrices being concatenated are not consistent.
 
>> MMM=[M0 MM];
Error using horzcat
Dimensions of matrices being concatenated are not consistent.
 
>> MMM=[M MM];
>> MMM

MMM =

     0     1     2
     0     3     4
     0     5     6

>> M=MMM

M =

     0     1     2
     0     3     4
     0     5     6

>> inv(transpose(M)*M)*transpose(M)*Y
Warning: Matrix is singular to working precision. 

ans =

   NaN
   NaN
   NaN

>> M= [M1 M2 M3];
>> M

M =

     1     2     3     4     5     6

>> M= [M1 ;M2 ;M3];
>> M

M =

     1     2
     3     4
     5     6

>> inv(transpose(M)*M)*transpose(M)*Y

ans =

   -0.0000
    0.5000

>> M=[1;1;1];
>> M

M =

     1
     1
     1

>> MM=[M1;M2;M3];
>> K=[M MM];
>> K

K =

     1     1     2
     1     3     4
     1     5     6

>> inv(transpose(K)*K)*transpose(K)*Y
Warning: Matrix is singular to working precision. 

ans =

   Inf
   Inf
   Inf

>> y
Undefined function or variable 'y'.
 
Did you mean:
>> Y

Y =

     1
     2
     3

>> yt=0.2*x
Undefined function or variable 'x'.
 
>> Y

Y =

     1
     2
     3

>> X=0.2*Y

X =

    0.2000
    0.4000
    0.6000

>> X=0.9+0.2*Y

X =

    1.1000
    1.3000
    1.5000

>> Y

Y =

     1
     2
     3

>> error=Y-X

error =

   -0.1000
    0.7000
    1.5000

>> plot(Y)
>> M

M =

     1
     1
     1

>> m=lower(M)

m =

     1
     1
     1

>> M1

M1 =

     1     2

>> lower(M)

ans =

     1
     1
     1

>> M=[1 3 4];
>> M=[2 3 4];
>> lower(M)

ans =

     2     3     4

>> M=[2; 3; 4];
>> lower(M)

ans =

     2
     3
     4

>> sumsq(error0
 sumsq(error0
             |
Error: Expression or statement is incorrect--possibly unbalanced (, {, or [.
 
>> sumsq(error)
Undefined function 'sumsq' for input arguments of type 'double'.
 
Did you mean:
>> sumsqr(error)

ans =

    2.7500

>> sumsqr(error)/n

ans =

    1.3750

>> PE=100*(error/Y)

PE =

         0         0   -3.3333
         0         0   23.3333
         0         0   50.0000

>> X

X =

    1.1000
    1.3000
    1.5000

>> Y

Y =

     1
     2
     3

>> F=Y

F =

     1
     2
     3

>> X

X =

    1.1000
    1.3000
    1.5000

>> F

F =

     1
     2
     3

>> (X-F)/F

ans =

         0         0    0.0333
         0         0   -0.2333
         0         0   -0.5000

>> X-F

ans =

    0.1000
   -0.7000
   -1.5000

>> (X-F)/F

ans =

         0         0    0.0333
         0         0   -0.2333
         0         0   -0.5000

>> errr
Undefined function or variable 'errr'.
 
Did you mean:
>> error

error =

   -0.1000
    0.7000
    1.5000

>> X

X =

    1.1000
    1.3000
    1.5000

>> error/X

ans =

         0         0   -0.0667
         0         0    0.4667
         0         0    1.0000

>> -0.1/1.1

ans =

   -0.0909

>> 0.7/1.3

ans =

    0.5385

>> mape_res = zeros(N_TRAIN);
Undefined function or variable 'N_TRAIN'.
 
>> mape_res = zeros(n);
>> mape_res

mape_res =

     0     0
     0     0

>> X

X =

    1.1000
    1.3000
    1.5000

>> F

F =

     1
     2
     3

>> error

error =

   -0.1000
    0.7000
    1.5000

>> error./X

ans =

   -0.0909
    0.5385
    1.0000

>> 100*error./X

ans =

   -9.0909
   53.8462
  100.0000

>> 100*(error./X)

ans =

   -9.0909
   53.8462
  100.0000

>> error

error =

   -0.1000
    0.7000
    1.5000

>> X

X =

    1.1000
    1.3000
    1.5000

>> error./X

ans =

   -0.0909
    0.5385
    1.0000

>> PE=abs(100*error./X)

PE =

    9.0909
   53.8462
  100.0000

>> MAPE=PE/n

MAPE =

    4.5455
   26.9231
   50.0000

>> MAPE=sum(PE/n)

MAPE =

   81.4685

>> MAPE=sum(abs(100*error./X))

MAPE =

  162.9371

>> PE

PE =

    9.0909
   53.8462
  100.0000

>> sum(PE)/n

ans =

   81.4685

>> X

X =

    1.1000
    1.3000
    1.5000

>> F

F =

     1
     2
     3

>> error

error =

   -0.1000
    0.7000
    1.5000

>> PE=100*(error/X)
MAPE=sum(PE)/n

PE =

         0         0   -6.6667
         0         0   46.6667
         0         0  100.0000


MAPE =

     0     0    70

>> %MAPE
PE=100*(error./X)
MAPE=sum(PE)/n

PE =

   -9.0909
   53.8462
  100.0000


MAPE =

   72.3776

>> X

X =

    1.1000
    1.3000
    1.5000

>> F

F =

     1
     2
     3

>> PE=100*(error./X)

PE =

   -9.0909
   53.8462
  100.0000

>>  MAPE=sum(abs(100*error./X))

MAPE =

  162.9371

>> MAPE=sum(abs(100*error./X))/n

MAPE =

   81.4685

>> 